Introduction to GitHub :
    1)GitHub is a platform for version control and collaboration, allowing multiple developers to work on projects simultaneously.
   2)Built on Git, a distributed version control system.
   3)Useful for storing code, managing projects, and maintaining version history.
Basic GitHub Concept:
   1)Repository (Repo): A project folder containing files and version history. Can be local or hosted on GitHub.
   2)Branch : A parallel version of the repository. The default branch is usually called main or master.
   3)Commit: A snapshot of changes made in the repository. Each commit has a unique ID (hash).
   4)Merge :Combining changes from one branch into another.
   5) Pull Request (PR):  A proposal to merge changes from one branch to another, often used for code reviews.
   6)Fork : A copy of a repository owned by a different user, allowing for contributions without affecting the original repo.
   7)Clone: Copying a repository from GitHub to your local machine.
Key Git Commands :
   git init`: Initialize a new Git repository.
   git clone <repo_url>: Clone an existing repository from GitHub to your local machine.
   git add <file>: Stage a file for commit.
   git commit -m "message": Commit changes with a message.
   'git push`: Push commits to the remote repository (e.g., GitHub).
   'git pull`: Fetch and merge changes from a remote repository.
   git branch: List, create, or delete branches.
   git checkout <branch>: Switch to a different branch.
    git merge <branch>: Merge another branch into the current one.

GitHub Workflow:
   1. "Fork" a repository (for external contributions).
   2. "Clone"the repository to your local machine.
   3. Create a new  "branch" for your feature or bug fix.
   4. Make your changes, "commit" them, and "push" them to GitHub.
   5. Create a "pull request" to the main repository for review.
   6. After review and approval, the code is "merged" into the main branch.
Common GitHub Terms:
   1)README.md : A markdown file typically placed at the root of the repository to provide an overview of the project.
   2)LICENSE: Defines the terms under which the code can be used, modified, or shared.
   3).gitignore : Specifies intentionally untracked files to ignore in a Git repository (e.g., compiled files, logs).
Popular GitHub Features :
   1)GitHub Pages: Hosting static websites directly from a repository.
   2)GitHub Discussions : Community-driven discussions for support, feedback, and ideas.
   3)Actions : Automate workflows such as building and testing your code.
   4)Gists : Share and embed snippets of code.
